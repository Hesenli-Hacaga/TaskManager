{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\ninitialState = {\n  task: [],\n  taskAuth: true\n};\nconst createTask = createSlice({\n  name: \"createTask\",\n  initialState: initialState,\n  reducers: {\n    addTask(state, actions) {\n      const taskDetails = actions.payload;\n      console.log(state.task);\n      console.log(taskDetails);\n\n      for (let task of taskDetails) {\n        if (task.title.length < 0) {}\n      }\n    }\n\n  }\n});\nexport const createTaskActions = createTask.actions;\nexport default createTask;","map":{"version":3,"names":["createSlice","initialState","task","taskAuth","createTask","name","reducers","addTask","state","actions","taskDetails","payload","console","log","title","length","createTaskActions"],"sources":["C:/Users/user/Desktop/React2022/Form.InputValidations.HandlingInputs/src/store/createtask-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\ninitialState = { task: [], taskAuth: true };\r\nconst createTask = createSlice({\r\n  name: \"createTask\",\r\n  initialState:initialState,\r\n  reducers: {\r\n    addTask(state, actions) {\r\n      const taskDetails = actions.payload;\r\n      console.log(state.task)\r\n      console.log(taskDetails)\r\n      for (let task of taskDetails) {\r\n        if (task.title.length < 0) {\r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const createTaskActions = createTask.actions;\r\n\r\nexport default createTask;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEAC,YAAY,GAAG;EAAEC,IAAI,EAAE,EAAR;EAAYC,QAAQ,EAAE;AAAtB,CAAf;AACA,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,YADuB;EAE7BJ,YAAY,EAACA,YAFgB;EAG7BK,QAAQ,EAAE;IACRC,OAAO,CAACC,KAAD,EAAQC,OAAR,EAAiB;MACtB,MAAMC,WAAW,GAAGD,OAAO,CAACE,OAA5B;MACAC,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACN,IAAlB;MACAU,OAAO,CAACC,GAAR,CAAYH,WAAZ;;MACA,KAAK,IAAIR,IAAT,IAAiBQ,WAAjB,EAA8B;QAC5B,IAAIR,IAAI,CAACY,KAAL,CAAWC,MAAX,GAAoB,CAAxB,EAA2B,CAC1B;MACF;IACF;;EATO;AAHmB,CAAD,CAA9B;AAgBA,OAAO,MAAMC,iBAAiB,GAAGZ,UAAU,CAACK,OAArC;AAEP,eAAeL,UAAf"},"metadata":{},"sourceType":"module"}