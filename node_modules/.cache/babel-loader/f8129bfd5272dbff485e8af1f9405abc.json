{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport admin from \"../mockdatas/adminstrators\";\nimport users from \"../mockdatas/users\";\nconst initialState = {\n  isAuthenticated: false,\n  isAuthAdmin: false,\n  isAuthUser: false,\n  username: \"\"\n};\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    isLogin(state, action) {\n      const data = action.payload;\n\n      for (let item of admin) {\n        if (item.name === data.name || item.pass === data.pass) {\n          localStorage.setItem('admin', true);\n          state.isAuthenticated = true;\n          state.isAuthAdmin = true;\n        }\n      }\n\n      for (let user of users) {\n        if (user.name === data.name || user.password === data.pass) {\n          state.isAuthenticated = true;\n          state.isAuthUser = true;\n        }\n      }\n    },\n\n    setToStorage(state, action) {\n      const data = action.payload;\n      state.username = localStorage.setItem(\"key\", data);\n    }\n\n  }\n});\nexport default loginSlice;\nexport const loginAction = loginSlice.actions;","map":{"version":3,"names":["createSlice","admin","users","initialState","isAuthenticated","isAuthAdmin","isAuthUser","username","loginSlice","name","reducers","isLogin","state","action","data","payload","item","pass","localStorage","setItem","user","password","setToStorage","loginAction","actions"],"sources":["C:/Users/user/Desktop/React2022/Form.InputValidations.HandlingInputs/src/store/login-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport admin from \"../mockdatas/adminstrators\";\r\nimport users from \"../mockdatas/users\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  isAuthAdmin: false,\r\n  isAuthUser: false,\r\n  username: \"\",\r\n};\r\nconst loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {\r\n    isLogin(state, action) {\r\n      const data = action.payload;\r\n      for (let item of admin) {\r\n        if (item.name === data.name || item.pass === data.pass) {\r\n          localStorage.setItem('admin',true)\r\n          state.isAuthenticated = true;\r\n          state.isAuthAdmin = true;\r\n        }\r\n      }\r\n      for(let user of users){\r\n        if (user.name === data.name || user.password === data.pass) {\r\n          state.isAuthenticated = true;\r\n          state.isAuthUser = true;\r\n        }\r\n      }\r\n    },\r\n    setToStorage(state, action) {\r\n      const data = action.payload;\r\n      state.username = localStorage.setItem(\"key\", data);\r\n    },\r\n  },\r\n});\r\n\r\nexport default loginSlice;\r\n\r\nexport const loginAction = loginSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,KADE;EAEnBC,WAAW,EAAE,KAFM;EAGnBC,UAAU,EAAE,KAHO;EAInBC,QAAQ,EAAE;AAJS,CAArB;AAMA,MAAMC,UAAU,GAAGR,WAAW,CAAC;EAC7BS,IAAI,EAAE,OADuB;EAE7BN,YAF6B;EAG7BO,QAAQ,EAAE;IACRC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACrB,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;;MACA,KAAK,IAAIC,IAAT,IAAiBf,KAAjB,EAAwB;QACtB,IAAIe,IAAI,CAACP,IAAL,KAAcK,IAAI,CAACL,IAAnB,IAA2BO,IAAI,CAACC,IAAL,KAAcH,IAAI,CAACG,IAAlD,EAAwD;UACtDC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6B,IAA7B;UACAP,KAAK,CAACR,eAAN,GAAwB,IAAxB;UACAQ,KAAK,CAACP,WAAN,GAAoB,IAApB;QACD;MACF;;MACD,KAAI,IAAIe,IAAR,IAAgBlB,KAAhB,EAAsB;QACpB,IAAIkB,IAAI,CAACX,IAAL,KAAcK,IAAI,CAACL,IAAnB,IAA2BW,IAAI,CAACC,QAAL,KAAkBP,IAAI,CAACG,IAAtD,EAA4D;UAC1DL,KAAK,CAACR,eAAN,GAAwB,IAAxB;UACAQ,KAAK,CAACN,UAAN,GAAmB,IAAnB;QACD;MACF;IACF,CAhBO;;IAiBRgB,YAAY,CAACV,KAAD,EAAQC,MAAR,EAAgB;MAC1B,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;MACAH,KAAK,CAACL,QAAN,GAAiBW,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BL,IAA5B,CAAjB;IACD;;EApBO;AAHmB,CAAD,CAA9B;AA2BA,eAAeN,UAAf;AAEA,OAAO,MAAMe,WAAW,GAAGf,UAAU,CAACgB,OAA/B"},"metadata":{},"sourceType":"module"}